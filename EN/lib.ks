FUNCTION POP{PARAMETER T. HUDTEXT(T, 5, 2, 20, GREEN, FALSE).}
FUNCTION MSG{PARAMETER T. HUDTEXT(T, 5, 2, 20, GREEN, FALSE). PRINT "MSG: "+T.}
FUNCTION ERR{PARAMETER T IS "ERR". HUDTEXT(T, 10, 4, 20, RED, FALSE). PRINT "ERR: "+T.}
FUNCTION WRN{PARAMETER T IS "WRN". HUDTEXT(T, 10, 4, 20, RGB(255,140,0), FALSE). PRINT "WRN: "+T.}
FUNCTION HMS{PARAMETER T. RETURN (TIME-TIME+T):CLOCK.}
function OrbN {PARAMETER O. RETURN VCRS(O:BODY:POSITION - O:POSITION, O:VELOCITY:ORBIT):NORMALIZED.}
function RInc {parameter A, B. RETURN VANG(OrbN(A), OrbN(B)).}
function TTLng {PARAMETER L. LOCAL AS IS (360/OBT:PERIOD) - 360/BODY:ROTATIONPERIOD. LOCAL DL IS MOD(L + 360 - LONGITUDE, 360). IF DL < 0 {SET DL to DL + 360.} RETURN DL/AS.}
FUNCTION VNODE{Parameter VC,T. SET T TO time:seconds+T. local P is velocityat(ship,T):orbit. local N is vcrs(P,-positionat(body,T)). ADD NODE(T,vdot(VC,vcrs(N,P):normalized), vdot(VC,N:normalized), vdot(VC,P:normalized)).}
FUNCTION BURN {PARAMETER BV, THR IS 0.1.
LOCK steering to BV(). WAIT UNTIL VANG(BV(), FACING:VECTOR) < 0.5.
LOCK THROTTLE to MAX(0.1,1/(1+VANG(BV(),FACING:VECTOR)^2))*min(1,BV():MAG*MASS/SHIP:AVAILABLETHRUST).
WAIT UNTIL BV():MAG <= THR. SET THROTTLE TO 0. UNLOCK STEERING.}